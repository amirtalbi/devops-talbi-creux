name: Build, Push, and Update Deployment

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint-and-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js for Linting
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies and Lint Backend
        working-directory: ./backend
        run: |
          npm ci
          npm run lint

      - name: Install Dependencies and Lint Frontend
        working-directory: ./frontend
        run: |
          npm ci
          npm run lint

  build-push-update:
    runs-on: ubuntu-latest
    needs: lint-and-build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Extract Backend Version from package.json
        id: backend-version
        working-directory: ./backend
        run: |
          version=$(node -p "require('./package.json').version")
          echo "backend_version=$version" >> $GITHUB_ENV

      - name: Extract Frontend Version from package.json
        id: frontend-version
        working-directory: ./frontend
        run: |
          version=$(node -p "require('./package.json').version")
          echo "frontend_version=$version" >> $GITHUB_ENV

      - name: Log In to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_LOGIN }}
          password: ${{ secrets.GHCR_SECRET }}

      - name: Build and Push Backend Image
        working-directory: ./backend
        run: |
          docker build -t ghcr.io/${{ secrets.GHCR_LOGIN }}/devops-backend:${{ env.backend_version }} .
          docker push ghcr.io/${{ secrets.GHCR_LOGIN }}/devops-backend:${{ env.backend_version }}

      - name: Build and Push Frontend Image
        working-directory: ./frontend
        run: |
          docker build -t ghcr.io/${{ secrets.GHCR_LOGIN }}/devops-frontend:${{ env.frontend_version }} .
          docker push ghcr.io/${{ secrets.GHCR_LOGIN }}/devops-frontend:${{ env.frontend_version }}

      - name: Update Docker Compose on Remote Server
        env:
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_PASSWORD: ${{ secrets.SERVER_PASSWORD }}
          BACKEND_VERSION: ${{ env.backend_version }}
          FRONTEND_VERSION: ${{ env.frontend_version }}
        run: |
          sshpass -p "$SERVER_PASSWORD" ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_HOST << EOF
          cd /opt/docker/devops
          sed -i "s|ghcr.io/.*/devops-backend:.*|ghcr.io/${{ secrets.GHCR_LOGIN }}/devops-backend:$BACKEND_VERSION|" docker-compose.yml
          sed -i "s|ghcr.io/.*/devops-frontend:.*|ghcr.io/${{ secrets.GHCR_LOGIN }}/devops-frontend:$FRONTEND_VERSION|" docker-compose.yml
          docker compose up -d --build
          EOF
